import static java.lang.System.*;
import java.util.Arrays;		//use Arrays.toString() to help print out the array

public class MergeSort
{
	private static int passCount;

	public static void mergeSort(Comparable[] list)
	{


		passCount=0;
		mergeSort(list, 0, list.length);
	}

	private static void mergeSort( Comparable[] list, int front, int back)  //O( Log N )
	{
      int mid = (front + back)/2;
      if(mid==front)
        return;
      
      mergeSort(list,front,mid);
      mergeSort(list,mid,back);
      merge(list,front,back);
       out.println("pass " + passCount + " " + Arrays.toString(list));
   passCount++;


	}

	private static void merge(Comparable[] list, int front, int back)  //O(N)
	{

      Comparable[] a = new Comparable[back-front];
      int i = front;
      int j = (front+back)/2;
      int k = 0;
      int mid = j;
      while(i<mid&&j<back){
         if(list[i].compareTo(list[j])<0)
         {
            a[k++] = list[i++];
           // i++;  
         }
         else
         {
            a[k++] = list[j++];
           // j++;
          }
       //  k++;
}
   while(i<mid)
      {
         a[k++] = list[i++];
       //  k++;
       //  i++;
      }
   while(j<back)
      {
         a[k] = list[j];
         k++;
         j++;
      }
    for(int y = 0; y<back-front;++y)
      list[y+front] = a[y];
      
  //mid = j;

	}
}
